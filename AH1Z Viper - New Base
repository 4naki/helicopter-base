@name AH1Z Viper
@inputs [LandingPad LandingPad2 Base Seat Seat2 Rotor TailRotor MinigunBase MinigunTurret]:entity [CamAng CamAngTurret]:angle PodThirdPerson2 PodThirdPerson
@inputs Pod1Ammo Pod2Ammo Pod3Ammo Pod4Ammo Missiles1Ammo Missiles2Ammo
@outputs FirePrimary FireMissiles1 FireMissiles2 FirePod1 FirePod2 FirePod3 FirePod4
@outputs ReloadPod1 ReloadPod2 ReloadPod3 ReloadPod4 ReloadMissiles1 ReloadMissiles2
@outputs Throttle JoyX JoyY Power RPMOut CamPos:vector CamDistance CamParent:entity CamFilter:array AH [CamAng4 AngMinigun]:angle
@persist Ready1 Ready2 A B MissileType Throttle Active Power Val Val2 RPM AH NoPitch CamParent:entity
@persist [RotorPos TailRotorPos]:vector [RotorFX EngineStartFX PowerSwitchFX WindFX]:string
@persist [CamPosFP CamPosTP]:vector [CamDistanceFP CamDistanceTP]
@persist TPT [CamPosFPT CamPosTPT]:vector [CamDistanceFPT CamDistanceTPT] CamParentT:entity CamActiveTurret
@outputs TPT [CamPosT]:vector [CamDistanceT] CamParentT:entity CamActiveTurret

@trigger none

interval(50)

if(first()){
    
    CamFilter=array()
    CamFilter:pushEntity(Base)
    CamFilter:pushEntity(MinigunBase)
    CamFilter:pushEntity(MinigunTurret)
    
    foreach(I,E:entity=Base:children()){
        CamFilter:pushEntity(E)
    }
    foreach(I,E:entity=LandingPad:children()){
        CamFilter:pushEntity(E)
    }
    foreach(I,E:entity=MinigunBase:children()){
        CamFilter:pushEntity(E)
    }
    foreach(I,E:entity=MinigunTurret:children()){
        CamFilter:pushEntity(E)
    }
    
    RotorPos = vec(-1.4,0,70.6)
    TailRotorPos = vec(-366,17.8,48.5)
    
    RotorFX = "acf_extra/airfx/cobra.wav"
    EngineStartFX = "acf_extra/airfx/satellite_target.wav"
    PowerSwitchFX = "buttons/lever7.wav"
    WindFX = "acf_extra/vehiclefx/misc/windexternal.wav"
    
    CamPosFP = vec(0,-3,34)
    CamPosTP = vec(-62.3,0,125)
    CamDistanceFP = 0
    CamDistanceTP = 550
    
    CamPosFPT = vec(0,-3,34)
    CamPosTPT = vec(135,0,-54)
    CamDistanceFPT = 0
    CamDistanceTPT = 0
    
    AH=1
    RPM=0
    Val=0
    Val2=0
    Ready1=1
    Ready2=1
    
    setName("AH1Z Viper")
    
    Base:setMass(500*3)
    LandingPad:setMass(250*3)
    LandingPad2:setMass(15*3)
    
    Base:propDrag(0)
    Base:propInertia(vec(0,0,0))
    
    LandingPad:propDrag(0)
    LandingPad:propInertia(vec(0,0,0))
    LandingPad2:propDrag(0)
    LandingPad2:propInertia(vec(0,0,0))
    
    holoCreate(1,Rotor:toWorld(vec(0,0,0)),vec(0),Rotor:toWorld(ang(0,0,0)),vec(255),"cube")
    local Children=Rotor:children()
    Rotor:parentTo(holoEntity(1))
    holoPos(1,Base:toWorld(RotorPos))
    holoAng(1,Base:toWorld(ang(0,0,0)))
    holoParent(1,Base)
    for(I=1,Children:count()){
        Children[I,entity]:parentTo(Rotor)
    }
    
    holoCreate(2,TailRotor:toWorld(vec(0,0,0)),vec(0),TailRotor:toWorld(ang(0,0,0)),vec(255),"cube")
    local Children=TailRotor:children()
    TailRotor:parentTo(holoEntity(2))
    holoPos(2,Base:toWorld(TailRotorPos))
    holoAng(2,holoEntity(5):toWorld(ang(0,0,0)))
    holoParent(2,Base)
    for(I=2,Children:count()){
        Children[I,entity]:parentTo(TailRotor)
    }
    
    holoCreate(3)
    holoPos(3,Seat:toWorld(vec(0,25,15)))
    holoAng(3,Base:angles())
    holoParent(3,Base)
    holoAlpha(3,0)
    holoScale(3,vec(0.5))
    
    holoCreate(4)
    holoPos(4,Seat:toWorld(vec(0,25,25)))
    holoAng(4,Base:angles())
    holoParent(4,Base)
    holoAlpha(4,0)
    holoScale(4,vec(0.5))
    
    
    holoCreate(5,MinigunBase:toWorld(vec()),vec(),MinigunBase:toWorld(ang()),vec(255),"cube")
    local Children=MinigunBase:children()
    MinigunBase:parentTo(holoEntity(5))
    holoPos(5,Base:toWorld(vec(135.3,0,-27)))
    holoAng(5,Base:toWorld(ang(0,0,0)))
    holoParent(5,Base)
    for(I=5,Children:count()){
        Children[I,entity]:parentTo(MinigunBase)
    }
    
    holoCreate(6,MinigunTurret:toWorld(vec()),vec(),MinigunTurret:toWorld(ang()),vec(255),"cube")
    local Children=MinigunTurret:children()
    MinigunTurret:parentTo(holoEntity(6))
    holoPos(6,holoEntity(5):toWorld(vec(0,0,-10.8)))
    holoAng(6,holoEntity(5):toWorld(ang(0,0,0)))
    holoParent(6,holoEntity(5))
    for(I=6,Children:count()){
        Children[I,entity]:parentTo(MinigunTurret)
    }
    
    rangerFilter(array(Base,LandingPad,LandingPad2))
    rangerFilter(Base:children())
    rangerPersist(1)
}
Pilot=Seat:driver()

if(changed(Pilot)){
    if(Pilot){
        Active=1
    }else{
        Active=0
    }
}
#-- Buttons/Controls
FirePrimary=Pilot:keyAttack1()*Active
FireSecondary=Pilot:keyAttack2()*Active
OutputX=((Pilot:keyForward()-Pilot:keyBack())*25)*Active
OutputY=((Pilot:keyRight()-Pilot:keyLeft())*25)*Active
OutputZ=-(Pilot:keySprint()-Pilot:keyJump())*Active

ThirdPersonButton=Pilot:keyPressed("v")
Start=Pilot:keyReload()
AutoHoverButton=Pilot:keyPressed("f")
SwitchMissiles=Pilot:keyPressed("g")
Freelook=Pilot:keyWalk()

if(Pod1Ammo==0){
    ReloadPod1=1
}else{
    ReloadPod1=0
}
if(Pod2Ammo==0){
    ReloadPod2=1
}else{
    ReloadPod2=0
}
if(Pod3Ammo==0){
    ReloadPod3=1
}else{
    ReloadPod3=0
}
if(Pod4Ammo==0){
    ReloadPod4=1
}else{
    ReloadPod4=0
}
if(ReloadMissiles1==0){
    ReloadMissiles1=1
}else{
    ReloadMissiles1=0
}
if(ReloadMissiles2==0){
    ReloadMissiles2=1
}else{
    ReloadMissiles2=0
}

if(changed(ThirdPersonButton)&ThirdPersonButton){
    NoPitch=!NoPitch
}
TP=PodThirdPerson
TPT=PodThirdPerson2
if(changed(SwitchMissiles)&SwitchMissiles){
    MissileType=!MissileType
    if(MissileType){
        Seat:printDriver(_HUD_PRINTCENTER,"AGM-114 Selected")
    }else{
        Seat:printDriver(_HUD_PRINTCENTER,"BGM-71E Selected")
    }
}
if(MissileType){
    FirePod1=0
    FirePod2=0
    FirePod3=0
    FirePod4=0
    
    if(FireSecondary&Ready2){
        A=!A
        FireMissiles1=A
        FireMissiles2=!A
        Ready2=0
        timer("stopfiring",250)
        timer("ready2",1000)
    }
}else{
    if(FireSecondary&Ready1){
        B++
        if(B==4){
            B=0
        }
        FirePod1=B==1
        FirePod2=B==2
        FirePod3=B==3
        FirePod4=B==0
        
        Ready1=0
        timer("stopfiring",100)
        timer("ready1",250)
    }
    
    FireMissiles1=0
    FireMissiles2=0
}
if(clk("stopfiring")){
    FireMissiles1=0
    FireMissiles2=0
    FirePod1=0
    FirePod2=0
    FirePod3=0
    FirePod4=0
}
if(clk("ready1")){
    Ready1=1
}
if(clk("ready2")){
    Ready2=1
}
if(TP){
    CamPos=CamPosTP
    CamDistance=CamDistanceTP
    CamParent=Base
}else{
    CamPos=CamPosFP
    CamDistance=CamDistanceFP
    CamParent=Seat
}

if(TPT){
    CamPosT=CamPosTPT
    CamDistanceT=CamDistanceTPT
    CamParentT=Base
}else{
    CamPosT=CamPosFPT
    CamDistanceT=CamDistanceFPT
    CamParentT=Seat2
}

if(changed(Start)&Start){
    Power=!Power
    if(Power){
        Seat:hintDriver("Power: On",7)
    }else{
        Seat:hintDriver("Power: Off",7)
    }
}

if(changed(AutoHoverButton)&AutoHoverButton){
    AH=!AH
    if(AH){
        Seat:hintDriver("Auto Hover: On",7)
    }else{
        Seat:hintDriver("Auto Hover: Off",7)
    }
}

if(abs(OutputX)>2){
    if(OutputX<45){
        if(OutputX>-45){
            JoyX=OutputX
        }else{
            JoyX=-45
        }
    }else{
        JoyX=45
    }
}else{
    JoyX=0
}
if(abs(OutputY)>2){
    if(OutputY<45){
        if(OutputY>-45){
            JoyY=OutputY
        }else{
            JoyY=-45
        }
    }else{
        JoyY=45
    }
}else{
    JoyY=0
}

if(abs(OutputZ)>0.1){
    if(OutputZ>0){
        JoyZ=100
    }elseif(OutputZ<0){
        JoyZ=20
    }
}else{
    JoyZ=48
}

Throttle=JoyZ

Autohover=-Base:angles():setYaw(0)*AH

Tilt=ang(0+JoyX*0.375,0,JoyY*0.75)+(Base:toLocal((((CamAng*!NoPitch)+(CamAng*ang(0,1,1)*NoPitch))*!Freelook)+(Base:angles()*ang(0,1,0)*Freelook))*ang(1,Power&Active,0))
Ang=((Autohover*ang(0,0,1))+Tilt)*500

Damping=(-((Base:forward()*Base:velL():x()*0.001)+(-Base:right()*Base:velL():y()*0.003)+(Base:up()*Base:velL():z()*0.02))*0.1)*1
Damping2=(Base:angVel()*ang(45,75,40)*2)*2

Vel=(Base:velL()/5)
if(Vel:x()<45){
    if(Vel:x()>-45){
        BaseX=Vel:x()
    }else{
        BaseX=-45
    }
}else{
    BaseX=45
}
if(Vel:y()<45){
    if(Vel:y()>-45){
        BaseY=Vel:y()
    }else{
        BaseY=-45
    }
}else{
    BaseY=45
}

AutoStop=(ang(-BaseX,0,BaseY)/25)*AH
Tilt2=ang(JoyX+2,0,JoyY/15)*0.35
ThrottleMult=0.5+(Throttle/95)

holoAng(3,Base:toWorld((AutoStop+Tilt2)*ThrottleMult))
holoAng(4,Base:toWorld((ang(JoyX,0,JoyY)*0.1)))

Base:applyForce((((Damping+holoEntity(3):up()*RPM/100)*((Throttle/100)*1.6))*(Base:mass()*(52+0)))/(1))
Base:applyAngForce((((Ang*1)-Damping2)*((Base:mass()/25)*(RPM/100)))/(1))
LandingPad:setMass(150*3*((100-RPM)/100))
LandingPad2:setMass(15*3*((100-RPM)/100))
if(changed(Power)){
    if(Power){
        Base:soundPlay("rotor",0,RotorFX)
        Base:soundPlay("power",0,EngineStartFX)
        Base:soundPlay("switch",0,PowerSwitchFX)
        Base:soundPlay("wind",0,WindFX)
    }else{
        
    }
}
soundPitch("rotor",25+((RPM+((50-Throttle)/80))/100)*95)
soundVolume("rotor",0+(RPM+((50-Throttle)/80))/100)

soundPitch("wind",25+(RPM/100)*100)
soundVolume("wind",(RPM/100)*0.2)
if(Power){
    if(RPM<70){
        RPM+=0.3
    }
    if(Throttle){
        if((-25+Throttle)/150>0){
            if(RPM<99){
                RPM+=(-25+Throttle)/150
            }
        }else{
            RPM+=(-25+Throttle)/150
        }
    }else{
        if(RPM>70){
            RPM-=0.28
        }
    }
}else{
    if(RPM>0){
        RPM-=0.1+((0.32-0.1))
    }
    if(RPM<0){
        RPM=0
    }
}
Val+=RPM
Val2+=RPM/(1.8+((Pilot:keyAttack1()-Pilot:keyAttack2())*0.75))
holoAng(1,holoEntity(4):toWorld(ang(0,Val,0)))
holoAng(2,Base:toWorld(ang(Val2,0,0)))


if(Seat2:driver()){
    CamActiveTurret=1
    CamAng4=CamAngTurret
}else{
    CamActiveTurret=0
}
AngMinigun=ang(clamp(Base:toLocal(CamAng4):pitch(),-15,65),clamp(Base:toLocal(CamAng4):yaw(),-115,115),0)*Seat2:driver():isValid()
if(!Freelook){
    holoAng(5,Base:toWorld(ang(0,AngMinigun:yaw(),0)))
    holoAng(6,holoEntity(5):toWorld(ang(AngMinigun:pitch(),0,0)))
}
RPMOut=682*(RPM/100)

if(dupefinished()){
    reset()
}

